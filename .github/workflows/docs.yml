name: Build and deploy documentation

on:
  workflow_call:
    inputs:
      build-path:
        required: false
        default: '.'
        type: string
      deploy:
        required: false
        default: false
        type: boolean

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ${{ inputs.build-path }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"
          cache: npm
          cache-dependency-path: ${{ inputs.build-path }}/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Check formatting
        run: npm run format:check

      - name: Configure GitHub Pages
        id: pages
        uses: actions/configure-pages@v2

      - name: Build static site
        run: |
          npm run build -- \
            --site "${{ steps.pages.outputs.base_url }}" \
            --base "${{ steps.pages.outputs.base_path }}"

      - name: Move build artifacts
        # This is a workaround. The link checking tool we're using does not support.
        # We need to create a directory structure that matches URLs in the generated HTML.
        # For example, if the page is deployed to user.github.io/repo-name, all HTML files
        # need to be moved to `dist/repo-name`.
        run: |
          if [ -n "${{ steps.pages.outputs.base_path }}" ];
          then
            mv ./dist ./dist-tmp
            mkdir ./dist
            mv ./dist-tmp ./dist/${{ steps.pages.outputs.base_path }}
          fi

      - name: Check links
        run: npm run links -- --github-actions

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: ${{ inputs.build-path }}/dist/${{ steps.pages.outputs.base_path }}

  deploy:
    if: ${{ inputs.deploy }}
    needs: build
    runs-on: ubuntu-latest

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
      
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1
