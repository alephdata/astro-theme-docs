---
import Spinner from './Spinner.astro';

const definition = Astro.props.content || Astro.slots.render();
const { straightEdges, highlightActive } = Astro.props;
---

<script>
  import mermaid from 'mermaid';
  import themeCSS from './mermaid-theme.css?raw';

  mermaid.initialize({
    themeCSS,
    securityLevel: 'loose',
    fontFamily: 'var(--font-family)',
    startOnLoad: false,
    flowchart: {
      padding: 8,
    },
  });

  mermaid.run({
    querySelector: '.Mermaid__graph',
    postRenderCallback: (id) => {
      const element = document.getElementById(id);
      const parent = element.parentNode;
      parent.dataset.rendered = 'true';
    },
  });
</script>

<style>
  .Mermaid {
    position: relative;
    padding: var(--space-sm);
    aspect-ratio: 16 / 9;

    background-color: var(--color-bg-elevated);
    border: 1px solid var(--color-border-default);
    border-radius: var(--radius);
  }

  @media screen and (prefers-color-scheme: dark) {
    .Mermaid {
      background-color: rgba(0, 0, 0, 0.15);
      border-color: rgba(255, 255, 255, 0.1);
    }
  }

  .Mermaid__graph:not([data-processed='true']) {
    display: none;
  }

  .Mermaid__graph[data-rendered='true'] + .Mermaid__spinner {
    display: none;
  }

  .Mermaid__graph {
    display: flex;
    width: 100%;
    height: 100%;
    align-items: center;
    justify-content: center;
  }

  .Mermaid__graph > :global(svg) {
    max-width: 100%;
    max-height: 100%;
  }

  .Mermaid__spinner {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
  }
</style>

<div class="Mermaid">
  <div
    class="Mermaid__graph"
    data-straight-edges={straightEdges ? 'true' : 'false'}
    data-highlight-active={highlightActive ? 'true' : 'false'}
    set:html={definition}
  />
  <Spinner class="Mermaid__spinner" />
</div>
